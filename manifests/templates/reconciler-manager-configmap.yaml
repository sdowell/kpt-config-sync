# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: reconciler-manager-cm
  namespace: config-management-system
  labels:
    configmanagement.gke.io/system: "true"
    configmanagement.gke.io/arch: "csmr"
data:
  deployment.yaml: |
   apiVersion: apps/v1
   kind: Deployment
   metadata:
     name: # this field will be assigned dynamically by the reconciler-manager
     namespace: config-management-system
     labels:
       app: reconciler
       configmanagement.gke.io/system: "true"
       configmanagement.gke.io/arch: "csmr"
   spec:
     minReadySeconds: 10
     replicas: 1
     strategy:
       type: Recreate
     selector:
       matchLabels:
         app: reconciler
         configsync.gke.io/deployment-name: "" # this field will be assigned dynamically by the reconciler-manager
     template:
       metadata:
         labels:
           app: reconciler
           configsync.gke.io/deployment-name: "" # this field will be assigned dynamically by the reconciler-manager
           configsync.gke.io/sync-kind: "" # this field will be assigned dynamically by the reconciler-manager
           configsync.gke.io/sync-name: "" # this field will be assigned dynamically by the reconciler-manager
           configsync.gke.io/sync-namespace: "" # this field will be assigned dynamically by the reconciler-manager
         annotations:
           cluster-autoscaler.kubernetes.io/safe-to-evict: "true" # this annotation is needed so that pods doesn't block scale down
       spec:
         serviceAccountName: # this field will be assigned dynamically by the reconciler-manager
         containers:
         - name: hydration-controller
           image: HYDRATION_CONTROLLER_IMAGE_NAME
           command:
           - /hydration-controller
           args:
           - "--v=0"
           - "--repo-root=/repo"
           - "--source-root=source"
           - "--hydrated-root=hydrated"
           - "--source-link=rev"
           - "--hydrated-link=rev"
           volumeMounts:
           - name: repo
             mountPath: /repo
           imagePullPolicy: IfNotPresent
           securityContext:
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: false
             capabilities:
               drop:
               - NET_RAW
             runAsUser: 65533
           resources:
             requests:
               cpu: "10m"
               memory: "100Mi"
         - name: reconciler
           image: RECONCILER_IMAGE_NAME
           command:
           - /reconciler
           args:
           - "--v=0"
           - "--repo-root=/repo"
           - "--source-dir=/repo/source/rev"
           - "--hydrated-root=/repo/hydrated"
           - "--hydrated-link=rev"
           env:
           - name: KUBECACHEDIR
             value: "/.kube/cache"
           volumeMounts:
           - name: repo
             mountPath: /repo
             readOnly: true
           - name: kube
             mountPath: /.kube
           resources:
             requests:
               cpu: "50m"
               memory: "200Mi"
           securityContext:
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: true
             capabilities:
               drop:
               - NET_RAW
           imagePullPolicy: IfNotPresent
         - name: git-sync
           image: gcr.io/config-management-release/git-sync:v3.6.4-gke.1__linux_amd64
           args: ["--root=/repo/source", "--dest=rev", "--max-sync-failures=30", "--error-file=error.json", "--v=5"]
           volumeMounts:
           - name: repo
             mountPath: /repo
           - name: git-creds
             mountPath: /etc/git-secret
             readOnly: true
           imagePullPolicy: IfNotPresent
           securityContext:
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: false
             capabilities:
               drop:
               - NET_RAW
             runAsUser: 65533
           resources:
             requests:
               cpu: "10m"
               memory: "200Mi"
         - name: oci-sync
           image: OCI_SYNC_IMAGE_NAME
           args: ["--root=/repo/source", "--dest=rev", "--max-sync-failures=30", "--error-file=error.json"]
           volumeMounts:
           - name: repo
             mountPath: /repo
           imagePullPolicy: IfNotPresent
           securityContext:
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: false
             capabilities:
               drop:
               - NET_RAW
             runAsUser: 65533
           resources:
             requests:
               cpu: "10m"
               memory: "200Mi"
         - name: helm-sync
           image: HELM_SYNC_IMAGE_NAME
           args: ["--root=/repo/source", "--dest=rev", "--max-sync-failures=30", "--error-file=error.json"]
           volumeMounts:
           - name: repo
             mountPath: /repo
           - name: helm-creds
             mountPath: /etc/helm-secret
             readOnly: true
           imagePullPolicy: IfNotPresent
           securityContext:
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: false
             capabilities:
               drop:
               - NET_RAW
             runAsUser: 65533
           resources:
             requests:
               cpu: "50m"
               memory: "200Mi"
         - name: notification
           image: NOTIFICATION_IMAGE_NAME
           command:
           - /notification
           terminationMessagePath: "/dev/termination-log"
           terminationMessagePolicy: File
           imagePullPolicy: IfNotPresent
           securityContext:
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: true
           resources:
             requests:
               cpu: 10m
               memory: 50Mi
         - name: otel-agent
           image: gcr.io/config-management-release/otelcontribcol:v0.54.0
           command:
           - /otelcol-contrib
           args:
           - "--config=/conf/otel-agent-config.yaml"
           resources:
             limits:
               cpu: 1
               memory: 1Gi
             requests:
               cpu: 10m
               memory: 100Mi
           securityContext:
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: true
             capabilities:
               drop:
               - NET_RAW
           ports:
           - containerPort: 55678 # Default OpenCensus receiver port.
             protocol: TCP
           - containerPort: 8888  # Metrics.
             protocol: TCP
           volumeMounts:
           - name: otel-agent-config-vol
             mountPath: /conf
           livenessProbe:
             httpGet:
               path: /
               port: 13133 # Health Check extension default port.
               scheme: HTTP
           readinessProbe:
             httpGet:
               path: /
               port: 13133 # Health Check extension default port.
               scheme: HTTP
           imagePullPolicy: IfNotPresent
           # These KUBE env vars help populate OTEL_RESOURCE_ATTRIBUTES which
           # is used by the otel-agent to populate resource attributes when
           # emiting metrics to the otel-collector. This is more efficient than
           # having the otel-collector look them up from the apiserver.
           env:
           - name: KUBE_POD_NAME
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.name
           - name: KUBE_POD_NAMESPACE
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.namespace
           - name: KUBE_POD_UID
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.uid
           - name: KUBE_POD_IP
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: status.podIP
           - name: KUBE_NODE_NAME
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: spec.nodeName
           - name: KUBE_DEPLOYMENT_NAME
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.labels['configsync.gke.io/deployment-name']
           - name: CONFIGSYNC_SYNC_KIND
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.labels['configsync.gke.io/sync-kind']
           - name: CONFIGSYNC_SYNC_NAME
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.labels['configsync.gke.io/sync-name']
           - name: CONFIGSYNC_SYNC_NAMESPACE
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.labels['configsync.gke.io/sync-namespace']
           - name: OTEL_RESOURCE_ATTRIBUTES
             value: "k8s.pod.name=$(KUBE_POD_NAME),\
               k8s.pod.namespace=$(KUBE_POD_NAMESPACE),\
               k8s.pod.uid=$(KUBE_POD_UID),\
               k8s.pod.ip=$(KUBE_POD_IP),\
               k8s.node.name=$(KUBE_NODE_NAME),\
               k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)"
         volumes:
         - name: repo
           emptyDir: {}
         - name: kube
           emptyDir: {}
         - name: helm-creds
           secret:
             secretName: helm-creds
             defaultMode: 288
         - name: git-creds
           secret:
             secretName: git-creds
             defaultMode: 288
         - name: otel-agent-config-vol
           configMap:
             name: otel-agent
             defaultMode: 420
         securityContext:
           fsGroup: 65533
           runAsUser: 1000
           runAsNonRoot: true
           seccompProfile:
             type: RuntimeDefault
